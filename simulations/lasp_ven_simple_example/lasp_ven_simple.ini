[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 1s

# Network configuration
network = LaspVenSimpleSimulation
sim-time-limit = 300s

# Random number generators
num-rngs = 3
seed-set = ${repetition}

# Simulation control
debug-on-errors = false
print-undisposed = false

**.scalar-recording = true
**.vector-recording = true

#############################################################################
# World & Mobility Configuration
#############################################################################

# Playground configuration
*.playgroundSizeX = 2500m
*.playgroundSizeY = 2500m
*.playgroundSizeZ = 50m

# Visualization configuration
*.visualizer.dataLinkVisualizer.packetFilter = "*"
*.visualizer.networkRouteVisualizer.packetFilter = "*"
*.visualizer.transportConnectionVisualizer.packetFilter = "*"
*.visualizer.packetDropVisualizer.packetFilter = "*"
*.visualizer.physicalLinkVisualizer.packetFilter = "*"

# Packet animation settings
*.visualizer.*.animationSpeed = 1
*.visualizer.dataLinkVisualizer.fadeOutTime = 3s
*.visualizer.networkRouteVisualizer.fadeOutTime = 3s
*.visualizer.dataLinkVisualizer.packetNameFormat = "%n"
*.visualizer.networkRouteVisualizer.packetNameFormat = "%n"

# Veins integration
*.veinsManager.updateInterval = 0.1s
*.veinsManager.host = "localhost"
*.veinsManager.port = 9999
*.veinsManager.autoShutdown = true
*.veinsManager.launchConfig = xmldoc("launchd.xml")
*.veinsManager.moduleType = "lasp_ven.veins_inet.VeinsInetCar"
*.veinsManager.moduleName = "vehicle"
*.veinsManager.moduleDisplayString = ""

#############################################################################
# Network Layer Configuration  
#############################################################################

# IPv4 configuration
*.configurator.typename = "HostAutoConfigurator"
*.configurator.interfaces = "wlan0"
*.configurator.mcastGroups = "224.0.0.1"

#############################################################################
# Physical Layer Configuration
#############################################################################

# Radio medium
*.radioMedium.typename = "Ieee80211ScalarRadioMedium"
*.radioMedium.backgroundNoise.power = -110dBm
*.radioMedium.mediumLimitCache.carrierFrequency = 5.890e9Hz

# IEEE 802.11p configuration for vehicles
*.vehicle[*].wlan.typename = "Ieee80211Interface"
*.vehicle[*].wlan.radio.typename = "Ieee80211ScalarRadio"
*.vehicle[*].wlan.radio.carrierFrequency = 5.890e9Hz
*.vehicle[*].wlan.radio.bandwidth = 10MHz
*.vehicle[*].wlan.radio.transmitter.power = 20mW
*.vehicle[*].wlan.radio.transmitter.preambleDuration = 20us
*.vehicle[*].wlan.radio.transmitter.headerLength = 23B
*.vehicle[*].wlan.radio.receiver.sensitivity = -85dBm
*.vehicle[*].wlan.radio.receiver.energyDetection = -85dBm
*.vehicle[*].wlan.radio.receiver.snirThreshold = 4dB
*.vehicle[*].wlan.mac.typename = "Ieee80211Mac"
*.vehicle[*].wlan.mac.qosStation = false

# LASP Manager network configuration
*.laspManager.wlan.typename = "Ieee80211Interface"
*.laspManager.wlan.radio.typename = "Ieee80211ScalarRadio"
*.laspManager.wlan.radio.carrierFrequency = 5.890e9Hz
*.laspManager.wlan.radio.transmitter.power = 100mW
*.laspManager.wlan.radio.transmitter.headerLength = 23B
*.laspManager.wlan.radio.receiver.sensitivity = -85dBm
*.laspManager.wlan.radio.receiver.energyDetection = -85dBm
*.laspManager.wlan.radio.receiver.snirThreshold = 4dB
*.laspManager.wlan.mac.typename = "Ieee80211Mac"

# Test App network configuration
*.testApp.wlan.typename = "Ieee80211Interface"
*.testApp.wlan.radio.typename = "Ieee80211ScalarRadio"
*.testApp.wlan.radio.carrierFrequency = 5.890e9Hz
*.testApp.wlan.radio.transmitter.power = 50mW
*.testApp.wlan.radio.transmitter.headerLength = 23B
*.testApp.wlan.radio.receiver.sensitivity = -85dBm
*.testApp.wlan.radio.receiver.energyDetection = -85dBm
*.testApp.wlan.radio.receiver.snirThreshold = 4dB
*.testApp.wlan.mac.typename = "Ieee80211Mac"

# Edge Server network configuration
*.edgeServer[*].wlan.typename = "Ieee80211Interface"
*.edgeServer[*].wlan.radio.typename = "Ieee80211ScalarRadio"
*.edgeServer[*].wlan.radio.carrierFrequency = 5.890e9Hz
*.edgeServer[*].wlan.radio.transmitter.power = 100mW
*.edgeServer[*].wlan.radio.transmitter.headerLength = 23B
*.edgeServer[*].wlan.radio.receiver.sensitivity = -85dBm
*.edgeServer[*].wlan.radio.receiver.energyDetection = -85dBm
*.edgeServer[*].wlan.radio.receiver.snirThreshold = 4dB
*.edgeServer[*].wlan.mac.typename = "Ieee80211Mac"

#############################################################################
# Application Layer Configuration
#############################################################################

# LASP Manager configuration
*.laspManager.numApps = 1
*.laspManager.app[0].typename = "lasp_ven.lasp_ven_simple.LASPManager"
*.laspManager.app[0].strategy = ${strategy="greedy","threshold"}
*.laspManager.app[0].loadThreshold = 0.8
*.laspManager.app[0].evaluationInterval = 2s
*.laspManager.app[0].numEdgeServers = ${servers=3,5,8}
*.laspManager.app[0].localPort = 9999

# Network configuration - connect to LASPManager parameter
*.numEdgeServers = ${servers}

# Test App configuration
*.testApp.numApps = 1
*.testApp.app[0].typename = "lasp_ven.lasp_ven_simple.TestApp"
*.testApp.app[0].testId = 1
*.testApp.app[0].requestInterval = 5s
*.testApp.app[0].maxRequests = 10
*.testApp.app[0].laspManagerPort = 9999

# Vehicle application configuration (using existing veins_inet apps)
*.vehicle[*].numApps = 1
*.vehicle[*].app[0].typename = "lasp_ven.veins_inet.VeinsInetSampleApplication"

# Vehicle mobility configuration (managed by VeinsInetManager)
*.vehicle[*].mobility.typename = "lasp_ven.veins_inet.VeinsInetMobility"

# Mobility configuration for fixed infrastructure
*.laspManager.mobility.typename = "StationaryMobility"
*.laspManager.mobility.initialX = 650m  # Central position in road network
*.laspManager.mobility.initialY = 400m  # Slightly offset from main road
*.laspManager.mobility.initialZ = 20m   # Elevated for better coverage

*.testApp.mobility.typename = "StationaryMobility"
*.testApp.mobility.initialX = 1250m
*.testApp.mobility.initialY = 1350m
*.testApp.mobility.initialZ = 10m

# Edge Server positioning (aligned with road network 0-100m, scaled for visualization)
*.edgeServer[*].mobility.typename = "StationaryMobility"

# Position edge servers strategically along road network - all coordinates explicit
# 3 servers: Linear distribution along main road
*.edgeServer[0].mobility.initialX = 200m
*.edgeServer[0].mobility.initialY = 500m
*.edgeServer[0].mobility.initialZ = 15m
*.edgeServer[1].mobility.initialX = 500m
*.edgeServer[1].mobility.initialY = 500m
*.edgeServer[1].mobility.initialZ = 15m
*.edgeServer[2].mobility.initialX = 800m
*.edgeServer[2].mobility.initialY = 500m
*.edgeServer[2].mobility.initialZ = 15m

# 5 servers: Grid pattern for better coverage
*.edgeServer[3].mobility.initialX = 100m
*.edgeServer[3].mobility.initialY = 250m
*.edgeServer[3].mobility.initialZ = 15m
*.edgeServer[4].mobility.initialX = 500m
*.edgeServer[4].mobility.initialY = 750m
*.edgeServer[4].mobility.initialZ = 15m

# 8 servers: Dense grid coverage
*.edgeServer[5].mobility.initialX = 375m
*.edgeServer[5].mobility.initialY = 750m
*.edgeServer[5].mobility.initialZ = 15m
*.edgeServer[6].mobility.initialX = 625m
*.edgeServer[6].mobility.initialY = 250m
*.edgeServer[6].mobility.initialZ = 15m
*.edgeServer[7].mobility.initialX = 875m
*.edgeServer[7].mobility.initialY = 750m
*.edgeServer[7].mobility.initialZ = 15m

# Edge Server application configuration
*.edgeServer[0].app[0].serverId = 0
*.edgeServer[1].app[0].serverId = 1
*.edgeServer[2].app[0].serverId = 2
*.edgeServer[3].app[0].serverId = 3
*.edgeServer[4].app[0].serverId = 4
*.edgeServer[5].app[0].serverId = 5
*.edgeServer[6].app[0].serverId = 6
*.edgeServer[7].app[0].serverId = 7
*.edgeServer[*].app[0].computeCapacity = 100GFLOPS
*.edgeServer[*].app[0].storageCapacity = 1000GB

#############################################################################
# Statistics and Output Configuration
#############################################################################

# Result recording
**.requestsReceived.result-recording-modes = +count,+sum,+vector
**.requestsServed.result-recording-modes = +count,+sum,+vector
**.averageLatency.result-recording-modes = +mean,+max,+min,+vector
**.serverUtilization.result-recording-modes = +mean,+max,+vector
**.requestsSent.result-recording-modes = +count,+sum,+vector
**.responsesReceived.result-recording-modes = +count,+sum,+vector

# Warmup period
warmup-period = 30s

# Output files - safe naming without special characters
output-vector-file = results/lasp_ven_simple-${repetition}.vec
output-scalar-file = results/lasp_ven_simple-${repetition}.sca


#############################################################################
# Experimental Configuration
#############################################################################

[Config Baseline]
description = "Baseline LASP VEN simulation"

[Config CompareStrategies] 
description = "Compare different service placement strategies"
extends = Baseline

[Config ScalabilityTest]
description = "Test scalability with different numbers of edge servers"
extends = Baseline 