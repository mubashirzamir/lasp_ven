[General]
cmdenv-output-file = log.txt
cmdenv-express-mode = false
cmdenv-autoflush = true
cmdenv-status-frequency = 1s

# Network configuration
network = LaspVenSimpleSimulation
sim-time-limit = 200s

# Random number generators
num-rngs = 3
seed-set = ${repetition}

# Simulation control
debug-on-errors = false
print-undisposed = false

**.scalar-recording = true
**.vector-recording = true

#############################################################################
# World & Mobility Configuration
#############################################################################

# Playground configuration
*.playgroundSizeX = 200m
*.playgroundSizeY = 200m
*.playgroundSizeZ = 50m

# Visualization configuration (simplified)
*.visualizer.dataLinkVisualizer.packetFilter = "*"
*.visualizer.networkRouteVisualizer.packetFilter = "*"
*.visualizer.*.animationSpeed = 1
*.visualizer.dataLinkVisualizer.fadeOutTime = 3s

# Veins integration
*.veinsManager.updateInterval = 0.1s
*.veinsManager.host = "localhost"
*.veinsManager.port = 9999
*.veinsManager.autoShutdown = true
*.veinsManager.launchConfig = xmldoc("launchd.xml")
*.veinsManager.moduleType = "lasp_ven.veins_inet.VeinsInetCar"
*.veinsManager.moduleName = "vehicle"
*.veinsManager.moduleDisplayString = ""

#############################################################################
# Network Layer Configuration  
#############################################################################

# Ipv4NetworkConfigurator configuration
*.configurator.config = xmldoc("network.xml")

# Vehicle IP assignment handled programmatically in VehicleServiceApp

# Routing configuration - all nodes are on the same subnet
*.laspManager.ipv4.routingTable.routingFile = ""
*.laspManager.ipv4.routingTable.rip.ripEnabled = false
*.edgeServer[*].ipv4.routingTable.routingFile = ""
*.edgeServer[*].ipv4.routingTable.rip.ripEnabled = false
*.vehicle[*].ipv4.routingTable.routingFile = ""
*.vehicle[*].ipv4.routingTable.rip.ripEnabled = false

# Disable automatic routing to prevent conflicts
*.laspManager.ipv4.configurator.addStaticRoutes = false
*.laspManager.ipv4.configurator.addDefaultRoutes = false
*.edgeServer[*].ipv4.configurator.addStaticRoutes = false
*.edgeServer[*].ipv4.configurator.addDefaultRoutes = false
*.vehicle[*].ipv4.configurator.addStaticRoutes = false
*.vehicle[*].ipv4.configurator.addDefaultRoutes = false

# Network interface configuration - ensure all nodes can communicate
*.laspManager.wlan[0].ipv4.broadcast = "192.168.1.255"
*.edgeServer[*].wlan[0].ipv4.broadcast = "192.168.1.255"
*.vehicle[*].wlan[0].ipv4.broadcast = "192.168.1.255"

#############################################################################
# Physical Layer Configuration
#############################################################################

# Radio medium - use UnitDiskRadioMedium for ad-hoc communication
*.radioMedium.typename = "UnitDiskRadioMedium"

# Vehicle network configuration - ad-hoc communication
*.vehicle[*].wlan[0].typename = "AckingWirelessInterface"
*.vehicle[*].wlan[0].bitrate = 2Mbps
*.vehicle[*].wlan[0].mac.typename = "CsmaCaMac"
*.vehicle[*].wlan[0].mac.useAck = false
*.vehicle[*].wlan[0].radio.typename = "UnitDiskRadio"
*.vehicle[*].wlan[0].radio.transmitter.communicationRange = 500m
*.vehicle[*].wlan[0].radio.receiver.ignoreInterference = true
*.vehicle[*].wlan[0].ipv4.netmask = "255.255.255.0"

# LASP Manager network configuration - ad-hoc communication
*.laspManager.numWlanInterfaces = 1
*.laspManager.wlan[0].typename = "AckingWirelessInterface"
*.laspManager.wlan[0].bitrate = 2Mbps
*.laspManager.wlan[0].mac.typename = "CsmaCaMac"
*.laspManager.wlan[0].mac.useAck = false
*.laspManager.wlan[0].radio.typename = "UnitDiskRadio"
*.laspManager.wlan[0].radio.transmitter.communicationRange = 500m
*.laspManager.wlan[0].radio.receiver.ignoreInterference = true
*.laspManager.wlan[0].ipv4.netmask = "255.255.255.0"

# Edge Server network configuration - ad-hoc communication
*.edgeServer[*].numWlanInterfaces = 1
*.edgeServer[*].wlan[0].typename = "AckingWirelessInterface"
*.edgeServer[*].wlan[0].bitrate = 2Mbps
*.edgeServer[*].wlan[0].mac.typename = "CsmaCaMac"
*.edgeServer[*].wlan[0].mac.useAck = false
*.edgeServer[*].wlan[0].radio.typename = "UnitDiskRadio"
*.edgeServer[*].wlan[0].radio.transmitter.communicationRange = 500m
*.edgeServer[*].wlan[0].radio.receiver.ignoreInterference = true
*.edgeServer[*].wlan[0].ipv4.netmask = "255.255.255.0"

#############################################################################
# Application Layer Configuration
#############################################################################

# LASP Manager configuration
*.laspManager.numApps = 1
*.laspManager.app[0].typename = "lasp_ven.lasp_ven_simple.LASPManager"
*.laspManager.app[0].strategy = ${strategy="greedy","threshold"}
*.laspManager.app[0].loadThreshold = 0.8
*.laspManager.app[0].evaluationInterval = 2s
*.laspManager.app[0].numEdgeServers = ${servers=3,5,8}
*.laspManager.app[0].localPort = 15000
*.laspManager.app[0].startTime = 0s

# Network configuration - connect to LASPManager parameter
*.numEdgeServers = ${servers}

# Edge Server application configuration
*.edgeServer[*].numApps = 1
*.edgeServer[*].app[0].typename = "lasp_ven.lasp_ven_simple.EdgeServerApp"
*.edgeServer[*].app[0].startTime = 0s
# Each edge server gets a unique port
*.edgeServer[0].app[0].localPort = 8000
*.edgeServer[1].app[0].localPort = 8001
*.edgeServer[2].app[0].localPort = 8002
*.edgeServer[0].app[0].serverId = 0
*.edgeServer[1].app[0].serverId = 1
*.edgeServer[2].app[0].serverId = 2
*.edgeServer[3].app[0].serverId = 3
*.edgeServer[4].app[0].serverId = 4
*.edgeServer[5].app[0].serverId = 5
*.edgeServer[6].app[0].serverId = 6
*.edgeServer[7].app[0].serverId = 7
*.edgeServer[*].app[0].computeCapacity = 100GFLOPS
*.edgeServer[*].app[0].storageCapacity = 1000GB

# Vehicle application configuration
*.vehicle[*].numApps = 1
*.vehicle[*].app[0].typename = "lasp_ven.lasp_ven_simple.VehicleServiceApp"
*.vehicle[*].app[0].serviceRequestInterval = 15s
*.vehicle[*].app[0].maxRequests = 3
*.vehicle[*].app[0].requestSize = 200B

#############################################################################
# Mobility Configuration
#############################################################################

# Vehicle mobility configuration (managed by VeinsInetManager)
*.vehicle[*].mobility.typename = "lasp_ven.veins_inet.VeinsInetMobility"

# Mobility configuration for fixed infrastructure
*.laspManager.mobility.typename = "StationaryMobility"
*.laspManager.mobility.initialX = 100m  # Central position in road network
*.laspManager.mobility.initialY = 100m  # Central to the square
*.laspManager.mobility.initialZ = 20m   # Elevated for better coverage

# Edge Server positioning
*.edgeServer[*].mobility.typename = "StationaryMobility"

# Position edge servers strategically
# 3 servers: Surrounding the 100m x 100m road network
*.edgeServer[0].mobility.initialX = 120m
*.edgeServer[0].mobility.initialY = 50m
*.edgeServer[0].mobility.initialZ = 15m
*.edgeServer[1].mobility.initialX = 50m
*.edgeServer[1].mobility.initialY = 120m
*.edgeServer[1].mobility.initialZ = 15m
*.edgeServer[2].mobility.initialX = 120m
*.edgeServer[2].mobility.initialY = 120m
*.edgeServer[2].mobility.initialZ = 15m

# 5 servers: Extended coverage around the square
*.edgeServer[3].mobility.initialX = 50m
*.edgeServer[3].mobility.initialY = 50m
*.edgeServer[3].mobility.initialZ = 15m
*.edgeServer[4].mobility.initialX = 120m
*.edgeServer[4].mobility.initialY = 50m
*.edgeServer[4].mobility.initialZ = 15m

# 8 servers: Complete surrounding coverage
*.edgeServer[5].mobility.initialX = 50m
*.edgeServer[5].mobility.initialY = 120m
*.edgeServer[5].mobility.initialZ = 15m
*.edgeServer[6].mobility.initialX = 120m
*.edgeServer[6].mobility.initialY = 120m
*.edgeServer[6].mobility.initialZ = 15m
*.edgeServer[7].mobility.initialX = 85m
*.edgeServer[7].mobility.initialY = 85m
*.edgeServer[7].mobility.initialZ = 15m

#############################################################################
# Statistics and Output Configuration
#############################################################################

# Result recording
**.requestsReceived.result-recording-modes = +count,+sum,+vector
**.requestsServed.result-recording-modes = +count,+sum,+vector
**.averageLatency.result-recording-modes = +mean,+max,+min,+vector
**.serverUtilization.result-recording-modes = +mean,+max,+vector
**.requestsSent.result-recording-modes = +count,+sum,+vector
**.responsesReceived.result-recording-modes = +count,+sum,+vector

# Warmup period
warmup-period = 30s

# Output files - safe naming without special characters
output-vector-file = results/lasp_ven_simple-${repetition}.vec
output-scalar-file = results/lasp_ven_simple-${repetition}.sca

#############################################################################
# Experimental Configuration
#############################################################################

# Base configuration for all experiments
[Config Baseline]
description = "Baseline LASP VEN simulation with 3 edge servers"

# Strategy comparison experiments
[Config ThresholdStrategy]
description = "Threshold-based service placement strategy"
extends = Baseline
*.laspManager.app[0].strategy = "threshold"

[Config GreedyStrategy]
description = "Greedy-based service placement strategy"
extends = Baseline
*.laspManager.app[0].strategy = "greedy"

# Edge server scalability experiments
[Config ThreeServers]
description = "3 edge servers configuration"
extends = Baseline
*.numEdgeServers = 3

[Config FiveServers]
description = "5 edge servers configuration"
extends = Baseline
*.numEdgeServers = 5

[Config EightServers]
description = "8 edge servers configuration"
extends = Baseline
*.numEdgeServers = 8

# Traffic load experiments
[Config LightTraffic]
description = "Light traffic - infrequent, small requests"
extends = Baseline
*.vehicle[*].app[0].serviceRequestInterval = 30s
*.vehicle[*].app[0].maxRequests = 2
*.vehicle[*].app[0].requestSize = 100B

[Config MediumTraffic]
description = "Medium traffic - moderate requests"
extends = Baseline
*.vehicle[*].app[0].serviceRequestInterval = 10s
*.vehicle[*].app[0].maxRequests = 5
*.vehicle[*].app[0].requestSize = 500B

[Config HeavyTraffic]
description = "Heavy traffic - frequent, large requests"
extends = Baseline
*.vehicle[*].app[0].serviceRequestInterval = 5s
*.vehicle[*].app[0].maxRequests = 10
*.vehicle[*].app[0].requestSize = 1000B

# Vehicle density experiments (requires manual route file editing)
[Config LowDensity]
description = "Low vehicle density - edit straight.rou.xml period=15"
extends = Baseline

[Config HighDensity]
description = "High vehicle density - edit straight.rou.xml period=2"
extends = Baseline 

# Configure all nodes for ad-hoc V2V/V2I communication
# (AckingWirelessInterface with CsmaCaMac provides ad-hoc communication by default) 
